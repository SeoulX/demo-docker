variables:
  IMAGE_NAME: aadinnr/demo-docker-rp
  IMAGE_TAG: react-app-1.0
  SSH_USER: ec2-user
  SSH_HOST: 18.136.126.84
  SSH_KEY: $SSH_PRIVATE_KEY

stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: node:18
  before_script:
    - npm install --force
  script:
    - npm test
  only:
    - main

build:
  stage: build
  image: docker:28.0.1
  services:
    - docker:28.0.1-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG

deploy:
  stage: deploy
  before_script:
    - chmod 600 "$SSH_PRIVATE_KEY"
  script:
    - ssh -o StrictHostKeyChecking=no -i "$SSH_PRIVATE_KEY" $SSH_USER@$SSH_HOST "
        sudo yum update -y &&
        sudo yum install -y docker &&
        sudo systemctl start docker &&
        sudo systemctl enable docker &&
        sudo usermod -aG docker ec2-user &&
        echo '$CI_REGISTRY_PASSWORD' | docker login -u '$CI_REGISTRY_USER' --password-stdin &&
        docker ps -aq | xargs -r docker stop | xargs -r docker rm &&
        docker pull $IMAGE_NAME:$IMAGE_TAG &&
        docker run -d -p 3000:3000 --name react-app $IMAGE_NAME:$IMAGE_TAG
      "
  only:
    - main